package services

import (
	color "github.com/acmacalister/skittles"
	"github.com/synw/microb/libmicrob/msgs"
	"github.com/synw/microb/libmicrob/types"
	"github.com/synw/terr"
)

func Get(servs []string) (map[string]*types.Service, *terr.Trace) {
	srvs := make(map[string]*types.Service)
	manSrvs := services
	for _, name := range servs {
		for k, v := range manSrvs {
			if k == name {
				srvs[k] = v
				msgs.Status("Initializing " + color.BoldWhite(v.Name) + " service")
				break
			}
		}
	}
	return srvs, nil
}

/*
func GetService(name string) *types.Service {
	return services[name]
}

func Init(servs []string, start bool) (map[string]*types.Service, *terr.Trace) {
	srv := make(map[string]*types.Service)
	for _, name := range servs {
		srv := GetService(name)
		//srv.Init(m.Verbose())
		m.Status("Initializing " + color.BoldWhite(srv.Name) + " service")
	}
	return srv, nil
}

func Dispatch(cmd *types.Cmd, c chan *types.Cmd) {
	com := cmd.Exec.(func(*types.Cmd) *types.Cmd)(cmd)
	c <- com
}*/
